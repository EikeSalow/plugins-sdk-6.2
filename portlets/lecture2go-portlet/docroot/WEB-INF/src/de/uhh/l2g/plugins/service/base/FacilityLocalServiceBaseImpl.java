/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.uhh.l2g.plugins.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import de.uhh.l2g.plugins.model.Facility;
import de.uhh.l2g.plugins.service.FacilityLocalService;
import de.uhh.l2g.plugins.service.persistence.CoordinatorPersistence;
import de.uhh.l2g.plugins.service.persistence.FacilityFinder;
import de.uhh.l2g.plugins.service.persistence.FacilityPersistence;
import de.uhh.l2g.plugins.service.persistence.Facility_HostPersistence;
import de.uhh.l2g.plugins.service.persistence.HostPersistence;
import de.uhh.l2g.plugins.service.persistence.LastvideolistPersistence;
import de.uhh.l2g.plugins.service.persistence.LectureseriesFinder;
import de.uhh.l2g.plugins.service.persistence.LectureseriesPersistence;
import de.uhh.l2g.plugins.service.persistence.Lectureseries_FacilityPersistence;
import de.uhh.l2g.plugins.service.persistence.LicensePersistence;
import de.uhh.l2g.plugins.service.persistence.MetadataPersistence;
import de.uhh.l2g.plugins.service.persistence.OfficePersistence;
import de.uhh.l2g.plugins.service.persistence.ProducerFinder;
import de.uhh.l2g.plugins.service.persistence.ProducerPersistence;
import de.uhh.l2g.plugins.service.persistence.Producer_LectureseriesPersistence;
import de.uhh.l2g.plugins.service.persistence.SegmentPersistence;
import de.uhh.l2g.plugins.service.persistence.Segment_User_VideoPersistence;
import de.uhh.l2g.plugins.service.persistence.SysPersistence;
import de.uhh.l2g.plugins.service.persistence.UploadPersistence;
import de.uhh.l2g.plugins.service.persistence.VideoFinder;
import de.uhh.l2g.plugins.service.persistence.VideoPersistence;
import de.uhh.l2g.plugins.service.persistence.Video_FacilityPersistence;
import de.uhh.l2g.plugins.service.persistence.Video_LectureseriesPersistence;
import de.uhh.l2g.plugins.service.persistence.VideohitlistPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the facility local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link de.uhh.l2g.plugins.service.impl.FacilityLocalServiceImpl}.
 * </p>
 *
 * @author Iavor Sturm
 * @see de.uhh.l2g.plugins.service.impl.FacilityLocalServiceImpl
 * @see de.uhh.l2g.plugins.service.FacilityLocalServiceUtil
 * @generated
 */
public abstract class FacilityLocalServiceBaseImpl extends BaseLocalServiceImpl
	implements FacilityLocalService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link de.uhh.l2g.plugins.service.FacilityLocalServiceUtil} to access the facility local service.
	 */

	/**
	 * Adds the facility to the database. Also notifies the appropriate model listeners.
	 *
	 * @param facility the facility
	 * @return the facility that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public Facility addFacility(Facility facility) throws SystemException {
		facility.setNew(true);

		return facilityPersistence.update(facility);
	}

	/**
	 * Creates a new facility with the primary key. Does not add the facility to the database.
	 *
	 * @param facilityId the primary key for the new facility
	 * @return the new facility
	 */
	@Override
	public Facility createFacility(long facilityId) {
		return facilityPersistence.create(facilityId);
	}

	/**
	 * Deletes the facility with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param facilityId the primary key of the facility
	 * @return the facility that was removed
	 * @throws PortalException if a facility with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public Facility deleteFacility(long facilityId)
		throws PortalException, SystemException {
		return facilityPersistence.remove(facilityId);
	}

	/**
	 * Deletes the facility from the database. Also notifies the appropriate model listeners.
	 *
	 * @param facility the facility
	 * @return the facility that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public Facility deleteFacility(Facility facility) throws SystemException {
		return facilityPersistence.remove(facility);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(Facility.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return facilityPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link de.uhh.l2g.plugins.model.impl.FacilityModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return facilityPersistence.findWithDynamicQuery(dynamicQuery, start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link de.uhh.l2g.plugins.model.impl.FacilityModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return facilityPersistence.findWithDynamicQuery(dynamicQuery, start,
			end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return facilityPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return facilityPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public Facility fetchFacility(long facilityId) throws SystemException {
		return facilityPersistence.fetchByPrimaryKey(facilityId);
	}

	/**
	 * Returns the facility with the primary key.
	 *
	 * @param facilityId the primary key of the facility
	 * @return the facility
	 * @throws PortalException if a facility with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public Facility getFacility(long facilityId)
		throws PortalException, SystemException {
		return facilityPersistence.findByPrimaryKey(facilityId);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return facilityPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the facilities.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link de.uhh.l2g.plugins.model.impl.FacilityModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of facilities
	 * @param end the upper bound of the range of facilities (not inclusive)
	 * @return the range of facilities
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<Facility> getFacilities(int start, int end)
		throws SystemException {
		return facilityPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of facilities.
	 *
	 * @return the number of facilities
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getFacilitiesCount() throws SystemException {
		return facilityPersistence.countAll();
	}

	/**
	 * Updates the facility in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param facility the facility
	 * @return the facility that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public Facility updateFacility(Facility facility) throws SystemException {
		return facilityPersistence.update(facility);
	}

	/**
	 * Returns the coordinator local service.
	 *
	 * @return the coordinator local service
	 */
	public de.uhh.l2g.plugins.service.CoordinatorLocalService getCoordinatorLocalService() {
		return coordinatorLocalService;
	}

	/**
	 * Sets the coordinator local service.
	 *
	 * @param coordinatorLocalService the coordinator local service
	 */
	public void setCoordinatorLocalService(
		de.uhh.l2g.plugins.service.CoordinatorLocalService coordinatorLocalService) {
		this.coordinatorLocalService = coordinatorLocalService;
	}

	/**
	 * Returns the coordinator persistence.
	 *
	 * @return the coordinator persistence
	 */
	public CoordinatorPersistence getCoordinatorPersistence() {
		return coordinatorPersistence;
	}

	/**
	 * Sets the coordinator persistence.
	 *
	 * @param coordinatorPersistence the coordinator persistence
	 */
	public void setCoordinatorPersistence(
		CoordinatorPersistence coordinatorPersistence) {
		this.coordinatorPersistence = coordinatorPersistence;
	}

	/**
	 * Returns the facility local service.
	 *
	 * @return the facility local service
	 */
	public de.uhh.l2g.plugins.service.FacilityLocalService getFacilityLocalService() {
		return facilityLocalService;
	}

	/**
	 * Sets the facility local service.
	 *
	 * @param facilityLocalService the facility local service
	 */
	public void setFacilityLocalService(
		de.uhh.l2g.plugins.service.FacilityLocalService facilityLocalService) {
		this.facilityLocalService = facilityLocalService;
	}

	/**
	 * Returns the facility persistence.
	 *
	 * @return the facility persistence
	 */
	public FacilityPersistence getFacilityPersistence() {
		return facilityPersistence;
	}

	/**
	 * Sets the facility persistence.
	 *
	 * @param facilityPersistence the facility persistence
	 */
	public void setFacilityPersistence(FacilityPersistence facilityPersistence) {
		this.facilityPersistence = facilityPersistence;
	}

	/**
	 * Returns the facility finder.
	 *
	 * @return the facility finder
	 */
	public FacilityFinder getFacilityFinder() {
		return facilityFinder;
	}

	/**
	 * Sets the facility finder.
	 *
	 * @param facilityFinder the facility finder
	 */
	public void setFacilityFinder(FacilityFinder facilityFinder) {
		this.facilityFinder = facilityFinder;
	}

	/**
	 * Returns the facility_ host local service.
	 *
	 * @return the facility_ host local service
	 */
	public de.uhh.l2g.plugins.service.Facility_HostLocalService getFacility_HostLocalService() {
		return facility_HostLocalService;
	}

	/**
	 * Sets the facility_ host local service.
	 *
	 * @param facility_HostLocalService the facility_ host local service
	 */
	public void setFacility_HostLocalService(
		de.uhh.l2g.plugins.service.Facility_HostLocalService facility_HostLocalService) {
		this.facility_HostLocalService = facility_HostLocalService;
	}

	/**
	 * Returns the facility_ host persistence.
	 *
	 * @return the facility_ host persistence
	 */
	public Facility_HostPersistence getFacility_HostPersistence() {
		return facility_HostPersistence;
	}

	/**
	 * Sets the facility_ host persistence.
	 *
	 * @param facility_HostPersistence the facility_ host persistence
	 */
	public void setFacility_HostPersistence(
		Facility_HostPersistence facility_HostPersistence) {
		this.facility_HostPersistence = facility_HostPersistence;
	}

	/**
	 * Returns the host local service.
	 *
	 * @return the host local service
	 */
	public de.uhh.l2g.plugins.service.HostLocalService getHostLocalService() {
		return hostLocalService;
	}

	/**
	 * Sets the host local service.
	 *
	 * @param hostLocalService the host local service
	 */
	public void setHostLocalService(
		de.uhh.l2g.plugins.service.HostLocalService hostLocalService) {
		this.hostLocalService = hostLocalService;
	}

	/**
	 * Returns the host persistence.
	 *
	 * @return the host persistence
	 */
	public HostPersistence getHostPersistence() {
		return hostPersistence;
	}

	/**
	 * Sets the host persistence.
	 *
	 * @param hostPersistence the host persistence
	 */
	public void setHostPersistence(HostPersistence hostPersistence) {
		this.hostPersistence = hostPersistence;
	}

	/**
	 * Returns the lastvideolist local service.
	 *
	 * @return the lastvideolist local service
	 */
	public de.uhh.l2g.plugins.service.LastvideolistLocalService getLastvideolistLocalService() {
		return lastvideolistLocalService;
	}

	/**
	 * Sets the lastvideolist local service.
	 *
	 * @param lastvideolistLocalService the lastvideolist local service
	 */
	public void setLastvideolistLocalService(
		de.uhh.l2g.plugins.service.LastvideolistLocalService lastvideolistLocalService) {
		this.lastvideolistLocalService = lastvideolistLocalService;
	}

	/**
	 * Returns the lastvideolist persistence.
	 *
	 * @return the lastvideolist persistence
	 */
	public LastvideolistPersistence getLastvideolistPersistence() {
		return lastvideolistPersistence;
	}

	/**
	 * Sets the lastvideolist persistence.
	 *
	 * @param lastvideolistPersistence the lastvideolist persistence
	 */
	public void setLastvideolistPersistence(
		LastvideolistPersistence lastvideolistPersistence) {
		this.lastvideolistPersistence = lastvideolistPersistence;
	}

	/**
	 * Returns the lectureseries local service.
	 *
	 * @return the lectureseries local service
	 */
	public de.uhh.l2g.plugins.service.LectureseriesLocalService getLectureseriesLocalService() {
		return lectureseriesLocalService;
	}

	/**
	 * Sets the lectureseries local service.
	 *
	 * @param lectureseriesLocalService the lectureseries local service
	 */
	public void setLectureseriesLocalService(
		de.uhh.l2g.plugins.service.LectureseriesLocalService lectureseriesLocalService) {
		this.lectureseriesLocalService = lectureseriesLocalService;
	}

	/**
	 * Returns the lectureseries persistence.
	 *
	 * @return the lectureseries persistence
	 */
	public LectureseriesPersistence getLectureseriesPersistence() {
		return lectureseriesPersistence;
	}

	/**
	 * Sets the lectureseries persistence.
	 *
	 * @param lectureseriesPersistence the lectureseries persistence
	 */
	public void setLectureseriesPersistence(
		LectureseriesPersistence lectureseriesPersistence) {
		this.lectureseriesPersistence = lectureseriesPersistence;
	}

	/**
	 * Returns the lectureseries finder.
	 *
	 * @return the lectureseries finder
	 */
	public LectureseriesFinder getLectureseriesFinder() {
		return lectureseriesFinder;
	}

	/**
	 * Sets the lectureseries finder.
	 *
	 * @param lectureseriesFinder the lectureseries finder
	 */
	public void setLectureseriesFinder(LectureseriesFinder lectureseriesFinder) {
		this.lectureseriesFinder = lectureseriesFinder;
	}

	/**
	 * Returns the lectureseries_ facility local service.
	 *
	 * @return the lectureseries_ facility local service
	 */
	public de.uhh.l2g.plugins.service.Lectureseries_FacilityLocalService getLectureseries_FacilityLocalService() {
		return lectureseries_FacilityLocalService;
	}

	/**
	 * Sets the lectureseries_ facility local service.
	 *
	 * @param lectureseries_FacilityLocalService the lectureseries_ facility local service
	 */
	public void setLectureseries_FacilityLocalService(
		de.uhh.l2g.plugins.service.Lectureseries_FacilityLocalService lectureseries_FacilityLocalService) {
		this.lectureseries_FacilityLocalService = lectureseries_FacilityLocalService;
	}

	/**
	 * Returns the lectureseries_ facility persistence.
	 *
	 * @return the lectureseries_ facility persistence
	 */
	public Lectureseries_FacilityPersistence getLectureseries_FacilityPersistence() {
		return lectureseries_FacilityPersistence;
	}

	/**
	 * Sets the lectureseries_ facility persistence.
	 *
	 * @param lectureseries_FacilityPersistence the lectureseries_ facility persistence
	 */
	public void setLectureseries_FacilityPersistence(
		Lectureseries_FacilityPersistence lectureseries_FacilityPersistence) {
		this.lectureseries_FacilityPersistence = lectureseries_FacilityPersistence;
	}

	/**
	 * Returns the license local service.
	 *
	 * @return the license local service
	 */
	public de.uhh.l2g.plugins.service.LicenseLocalService getLicenseLocalService() {
		return licenseLocalService;
	}

	/**
	 * Sets the license local service.
	 *
	 * @param licenseLocalService the license local service
	 */
	public void setLicenseLocalService(
		de.uhh.l2g.plugins.service.LicenseLocalService licenseLocalService) {
		this.licenseLocalService = licenseLocalService;
	}

	/**
	 * Returns the license persistence.
	 *
	 * @return the license persistence
	 */
	public LicensePersistence getLicensePersistence() {
		return licensePersistence;
	}

	/**
	 * Sets the license persistence.
	 *
	 * @param licensePersistence the license persistence
	 */
	public void setLicensePersistence(LicensePersistence licensePersistence) {
		this.licensePersistence = licensePersistence;
	}

	/**
	 * Returns the metadata local service.
	 *
	 * @return the metadata local service
	 */
	public de.uhh.l2g.plugins.service.MetadataLocalService getMetadataLocalService() {
		return metadataLocalService;
	}

	/**
	 * Sets the metadata local service.
	 *
	 * @param metadataLocalService the metadata local service
	 */
	public void setMetadataLocalService(
		de.uhh.l2g.plugins.service.MetadataLocalService metadataLocalService) {
		this.metadataLocalService = metadataLocalService;
	}

	/**
	 * Returns the metadata persistence.
	 *
	 * @return the metadata persistence
	 */
	public MetadataPersistence getMetadataPersistence() {
		return metadataPersistence;
	}

	/**
	 * Sets the metadata persistence.
	 *
	 * @param metadataPersistence the metadata persistence
	 */
	public void setMetadataPersistence(MetadataPersistence metadataPersistence) {
		this.metadataPersistence = metadataPersistence;
	}

	/**
	 * Returns the office local service.
	 *
	 * @return the office local service
	 */
	public de.uhh.l2g.plugins.service.OfficeLocalService getOfficeLocalService() {
		return officeLocalService;
	}

	/**
	 * Sets the office local service.
	 *
	 * @param officeLocalService the office local service
	 */
	public void setOfficeLocalService(
		de.uhh.l2g.plugins.service.OfficeLocalService officeLocalService) {
		this.officeLocalService = officeLocalService;
	}

	/**
	 * Returns the office persistence.
	 *
	 * @return the office persistence
	 */
	public OfficePersistence getOfficePersistence() {
		return officePersistence;
	}

	/**
	 * Sets the office persistence.
	 *
	 * @param officePersistence the office persistence
	 */
	public void setOfficePersistence(OfficePersistence officePersistence) {
		this.officePersistence = officePersistence;
	}

	/**
	 * Returns the producer local service.
	 *
	 * @return the producer local service
	 */
	public de.uhh.l2g.plugins.service.ProducerLocalService getProducerLocalService() {
		return producerLocalService;
	}

	/**
	 * Sets the producer local service.
	 *
	 * @param producerLocalService the producer local service
	 */
	public void setProducerLocalService(
		de.uhh.l2g.plugins.service.ProducerLocalService producerLocalService) {
		this.producerLocalService = producerLocalService;
	}

	/**
	 * Returns the producer persistence.
	 *
	 * @return the producer persistence
	 */
	public ProducerPersistence getProducerPersistence() {
		return producerPersistence;
	}

	/**
	 * Sets the producer persistence.
	 *
	 * @param producerPersistence the producer persistence
	 */
	public void setProducerPersistence(ProducerPersistence producerPersistence) {
		this.producerPersistence = producerPersistence;
	}

	/**
	 * Returns the producer finder.
	 *
	 * @return the producer finder
	 */
	public ProducerFinder getProducerFinder() {
		return producerFinder;
	}

	/**
	 * Sets the producer finder.
	 *
	 * @param producerFinder the producer finder
	 */
	public void setProducerFinder(ProducerFinder producerFinder) {
		this.producerFinder = producerFinder;
	}

	/**
	 * Returns the producer_ lectureseries local service.
	 *
	 * @return the producer_ lectureseries local service
	 */
	public de.uhh.l2g.plugins.service.Producer_LectureseriesLocalService getProducer_LectureseriesLocalService() {
		return producer_LectureseriesLocalService;
	}

	/**
	 * Sets the producer_ lectureseries local service.
	 *
	 * @param producer_LectureseriesLocalService the producer_ lectureseries local service
	 */
	public void setProducer_LectureseriesLocalService(
		de.uhh.l2g.plugins.service.Producer_LectureseriesLocalService producer_LectureseriesLocalService) {
		this.producer_LectureseriesLocalService = producer_LectureseriesLocalService;
	}

	/**
	 * Returns the producer_ lectureseries persistence.
	 *
	 * @return the producer_ lectureseries persistence
	 */
	public Producer_LectureseriesPersistence getProducer_LectureseriesPersistence() {
		return producer_LectureseriesPersistence;
	}

	/**
	 * Sets the producer_ lectureseries persistence.
	 *
	 * @param producer_LectureseriesPersistence the producer_ lectureseries persistence
	 */
	public void setProducer_LectureseriesPersistence(
		Producer_LectureseriesPersistence producer_LectureseriesPersistence) {
		this.producer_LectureseriesPersistence = producer_LectureseriesPersistence;
	}

	/**
	 * Returns the segment local service.
	 *
	 * @return the segment local service
	 */
	public de.uhh.l2g.plugins.service.SegmentLocalService getSegmentLocalService() {
		return segmentLocalService;
	}

	/**
	 * Sets the segment local service.
	 *
	 * @param segmentLocalService the segment local service
	 */
	public void setSegmentLocalService(
		de.uhh.l2g.plugins.service.SegmentLocalService segmentLocalService) {
		this.segmentLocalService = segmentLocalService;
	}

	/**
	 * Returns the segment persistence.
	 *
	 * @return the segment persistence
	 */
	public SegmentPersistence getSegmentPersistence() {
		return segmentPersistence;
	}

	/**
	 * Sets the segment persistence.
	 *
	 * @param segmentPersistence the segment persistence
	 */
	public void setSegmentPersistence(SegmentPersistence segmentPersistence) {
		this.segmentPersistence = segmentPersistence;
	}

	/**
	 * Returns the segment_ user_ video local service.
	 *
	 * @return the segment_ user_ video local service
	 */
	public de.uhh.l2g.plugins.service.Segment_User_VideoLocalService getSegment_User_VideoLocalService() {
		return segment_User_VideoLocalService;
	}

	/**
	 * Sets the segment_ user_ video local service.
	 *
	 * @param segment_User_VideoLocalService the segment_ user_ video local service
	 */
	public void setSegment_User_VideoLocalService(
		de.uhh.l2g.plugins.service.Segment_User_VideoLocalService segment_User_VideoLocalService) {
		this.segment_User_VideoLocalService = segment_User_VideoLocalService;
	}

	/**
	 * Returns the segment_ user_ video persistence.
	 *
	 * @return the segment_ user_ video persistence
	 */
	public Segment_User_VideoPersistence getSegment_User_VideoPersistence() {
		return segment_User_VideoPersistence;
	}

	/**
	 * Sets the segment_ user_ video persistence.
	 *
	 * @param segment_User_VideoPersistence the segment_ user_ video persistence
	 */
	public void setSegment_User_VideoPersistence(
		Segment_User_VideoPersistence segment_User_VideoPersistence) {
		this.segment_User_VideoPersistence = segment_User_VideoPersistence;
	}

	/**
	 * Returns the sys local service.
	 *
	 * @return the sys local service
	 */
	public de.uhh.l2g.plugins.service.SysLocalService getSysLocalService() {
		return sysLocalService;
	}

	/**
	 * Sets the sys local service.
	 *
	 * @param sysLocalService the sys local service
	 */
	public void setSysLocalService(
		de.uhh.l2g.plugins.service.SysLocalService sysLocalService) {
		this.sysLocalService = sysLocalService;
	}

	/**
	 * Returns the sys persistence.
	 *
	 * @return the sys persistence
	 */
	public SysPersistence getSysPersistence() {
		return sysPersistence;
	}

	/**
	 * Sets the sys persistence.
	 *
	 * @param sysPersistence the sys persistence
	 */
	public void setSysPersistence(SysPersistence sysPersistence) {
		this.sysPersistence = sysPersistence;
	}

	/**
	 * Returns the upload local service.
	 *
	 * @return the upload local service
	 */
	public de.uhh.l2g.plugins.service.UploadLocalService getUploadLocalService() {
		return uploadLocalService;
	}

	/**
	 * Sets the upload local service.
	 *
	 * @param uploadLocalService the upload local service
	 */
	public void setUploadLocalService(
		de.uhh.l2g.plugins.service.UploadLocalService uploadLocalService) {
		this.uploadLocalService = uploadLocalService;
	}

	/**
	 * Returns the upload persistence.
	 *
	 * @return the upload persistence
	 */
	public UploadPersistence getUploadPersistence() {
		return uploadPersistence;
	}

	/**
	 * Sets the upload persistence.
	 *
	 * @param uploadPersistence the upload persistence
	 */
	public void setUploadPersistence(UploadPersistence uploadPersistence) {
		this.uploadPersistence = uploadPersistence;
	}

	/**
	 * Returns the video local service.
	 *
	 * @return the video local service
	 */
	public de.uhh.l2g.plugins.service.VideoLocalService getVideoLocalService() {
		return videoLocalService;
	}

	/**
	 * Sets the video local service.
	 *
	 * @param videoLocalService the video local service
	 */
	public void setVideoLocalService(
		de.uhh.l2g.plugins.service.VideoLocalService videoLocalService) {
		this.videoLocalService = videoLocalService;
	}

	/**
	 * Returns the video persistence.
	 *
	 * @return the video persistence
	 */
	public VideoPersistence getVideoPersistence() {
		return videoPersistence;
	}

	/**
	 * Sets the video persistence.
	 *
	 * @param videoPersistence the video persistence
	 */
	public void setVideoPersistence(VideoPersistence videoPersistence) {
		this.videoPersistence = videoPersistence;
	}

	/**
	 * Returns the video finder.
	 *
	 * @return the video finder
	 */
	public VideoFinder getVideoFinder() {
		return videoFinder;
	}

	/**
	 * Sets the video finder.
	 *
	 * @param videoFinder the video finder
	 */
	public void setVideoFinder(VideoFinder videoFinder) {
		this.videoFinder = videoFinder;
	}

	/**
	 * Returns the video_ facility local service.
	 *
	 * @return the video_ facility local service
	 */
	public de.uhh.l2g.plugins.service.Video_FacilityLocalService getVideo_FacilityLocalService() {
		return video_FacilityLocalService;
	}

	/**
	 * Sets the video_ facility local service.
	 *
	 * @param video_FacilityLocalService the video_ facility local service
	 */
	public void setVideo_FacilityLocalService(
		de.uhh.l2g.plugins.service.Video_FacilityLocalService video_FacilityLocalService) {
		this.video_FacilityLocalService = video_FacilityLocalService;
	}

	/**
	 * Returns the video_ facility persistence.
	 *
	 * @return the video_ facility persistence
	 */
	public Video_FacilityPersistence getVideo_FacilityPersistence() {
		return video_FacilityPersistence;
	}

	/**
	 * Sets the video_ facility persistence.
	 *
	 * @param video_FacilityPersistence the video_ facility persistence
	 */
	public void setVideo_FacilityPersistence(
		Video_FacilityPersistence video_FacilityPersistence) {
		this.video_FacilityPersistence = video_FacilityPersistence;
	}

	/**
	 * Returns the video_ lectureseries local service.
	 *
	 * @return the video_ lectureseries local service
	 */
	public de.uhh.l2g.plugins.service.Video_LectureseriesLocalService getVideo_LectureseriesLocalService() {
		return video_LectureseriesLocalService;
	}

	/**
	 * Sets the video_ lectureseries local service.
	 *
	 * @param video_LectureseriesLocalService the video_ lectureseries local service
	 */
	public void setVideo_LectureseriesLocalService(
		de.uhh.l2g.plugins.service.Video_LectureseriesLocalService video_LectureseriesLocalService) {
		this.video_LectureseriesLocalService = video_LectureseriesLocalService;
	}

	/**
	 * Returns the video_ lectureseries persistence.
	 *
	 * @return the video_ lectureseries persistence
	 */
	public Video_LectureseriesPersistence getVideo_LectureseriesPersistence() {
		return video_LectureseriesPersistence;
	}

	/**
	 * Sets the video_ lectureseries persistence.
	 *
	 * @param video_LectureseriesPersistence the video_ lectureseries persistence
	 */
	public void setVideo_LectureseriesPersistence(
		Video_LectureseriesPersistence video_LectureseriesPersistence) {
		this.video_LectureseriesPersistence = video_LectureseriesPersistence;
	}

	/**
	 * Returns the videohitlist local service.
	 *
	 * @return the videohitlist local service
	 */
	public de.uhh.l2g.plugins.service.VideohitlistLocalService getVideohitlistLocalService() {
		return videohitlistLocalService;
	}

	/**
	 * Sets the videohitlist local service.
	 *
	 * @param videohitlistLocalService the videohitlist local service
	 */
	public void setVideohitlistLocalService(
		de.uhh.l2g.plugins.service.VideohitlistLocalService videohitlistLocalService) {
		this.videohitlistLocalService = videohitlistLocalService;
	}

	/**
	 * Returns the videohitlist persistence.
	 *
	 * @return the videohitlist persistence
	 */
	public VideohitlistPersistence getVideohitlistPersistence() {
		return videohitlistPersistence;
	}

	/**
	 * Sets the videohitlist persistence.
	 *
	 * @param videohitlistPersistence the videohitlist persistence
	 */
	public void setVideohitlistPersistence(
		VideohitlistPersistence videohitlistPersistence) {
		this.videohitlistPersistence = videohitlistPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("de.uhh.l2g.plugins.model.Facility",
			facilityLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"de.uhh.l2g.plugins.model.Facility");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return Facility.class;
	}

	protected String getModelClassName() {
		return Facility.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = facilityPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = de.uhh.l2g.plugins.service.CoordinatorLocalService.class)
	protected de.uhh.l2g.plugins.service.CoordinatorLocalService coordinatorLocalService;
	@BeanReference(type = CoordinatorPersistence.class)
	protected CoordinatorPersistence coordinatorPersistence;
	@BeanReference(type = de.uhh.l2g.plugins.service.FacilityLocalService.class)
	protected de.uhh.l2g.plugins.service.FacilityLocalService facilityLocalService;
	@BeanReference(type = FacilityPersistence.class)
	protected FacilityPersistence facilityPersistence;
	@BeanReference(type = FacilityFinder.class)
	protected FacilityFinder facilityFinder;
	@BeanReference(type = de.uhh.l2g.plugins.service.Facility_HostLocalService.class)
	protected de.uhh.l2g.plugins.service.Facility_HostLocalService facility_HostLocalService;
	@BeanReference(type = Facility_HostPersistence.class)
	protected Facility_HostPersistence facility_HostPersistence;
	@BeanReference(type = de.uhh.l2g.plugins.service.HostLocalService.class)
	protected de.uhh.l2g.plugins.service.HostLocalService hostLocalService;
	@BeanReference(type = HostPersistence.class)
	protected HostPersistence hostPersistence;
	@BeanReference(type = de.uhh.l2g.plugins.service.LastvideolistLocalService.class)
	protected de.uhh.l2g.plugins.service.LastvideolistLocalService lastvideolistLocalService;
	@BeanReference(type = LastvideolistPersistence.class)
	protected LastvideolistPersistence lastvideolistPersistence;
	@BeanReference(type = de.uhh.l2g.plugins.service.LectureseriesLocalService.class)
	protected de.uhh.l2g.plugins.service.LectureseriesLocalService lectureseriesLocalService;
	@BeanReference(type = LectureseriesPersistence.class)
	protected LectureseriesPersistence lectureseriesPersistence;
	@BeanReference(type = LectureseriesFinder.class)
	protected LectureseriesFinder lectureseriesFinder;
	@BeanReference(type = de.uhh.l2g.plugins.service.Lectureseries_FacilityLocalService.class)
	protected de.uhh.l2g.plugins.service.Lectureseries_FacilityLocalService lectureseries_FacilityLocalService;
	@BeanReference(type = Lectureseries_FacilityPersistence.class)
	protected Lectureseries_FacilityPersistence lectureseries_FacilityPersistence;
	@BeanReference(type = de.uhh.l2g.plugins.service.LicenseLocalService.class)
	protected de.uhh.l2g.plugins.service.LicenseLocalService licenseLocalService;
	@BeanReference(type = LicensePersistence.class)
	protected LicensePersistence licensePersistence;
	@BeanReference(type = de.uhh.l2g.plugins.service.MetadataLocalService.class)
	protected de.uhh.l2g.plugins.service.MetadataLocalService metadataLocalService;
	@BeanReference(type = MetadataPersistence.class)
	protected MetadataPersistence metadataPersistence;
	@BeanReference(type = de.uhh.l2g.plugins.service.OfficeLocalService.class)
	protected de.uhh.l2g.plugins.service.OfficeLocalService officeLocalService;
	@BeanReference(type = OfficePersistence.class)
	protected OfficePersistence officePersistence;
	@BeanReference(type = de.uhh.l2g.plugins.service.ProducerLocalService.class)
	protected de.uhh.l2g.plugins.service.ProducerLocalService producerLocalService;
	@BeanReference(type = ProducerPersistence.class)
	protected ProducerPersistence producerPersistence;
	@BeanReference(type = ProducerFinder.class)
	protected ProducerFinder producerFinder;
	@BeanReference(type = de.uhh.l2g.plugins.service.Producer_LectureseriesLocalService.class)
	protected de.uhh.l2g.plugins.service.Producer_LectureseriesLocalService producer_LectureseriesLocalService;
	@BeanReference(type = Producer_LectureseriesPersistence.class)
	protected Producer_LectureseriesPersistence producer_LectureseriesPersistence;
	@BeanReference(type = de.uhh.l2g.plugins.service.SegmentLocalService.class)
	protected de.uhh.l2g.plugins.service.SegmentLocalService segmentLocalService;
	@BeanReference(type = SegmentPersistence.class)
	protected SegmentPersistence segmentPersistence;
	@BeanReference(type = de.uhh.l2g.plugins.service.Segment_User_VideoLocalService.class)
	protected de.uhh.l2g.plugins.service.Segment_User_VideoLocalService segment_User_VideoLocalService;
	@BeanReference(type = Segment_User_VideoPersistence.class)
	protected Segment_User_VideoPersistence segment_User_VideoPersistence;
	@BeanReference(type = de.uhh.l2g.plugins.service.SysLocalService.class)
	protected de.uhh.l2g.plugins.service.SysLocalService sysLocalService;
	@BeanReference(type = SysPersistence.class)
	protected SysPersistence sysPersistence;
	@BeanReference(type = de.uhh.l2g.plugins.service.UploadLocalService.class)
	protected de.uhh.l2g.plugins.service.UploadLocalService uploadLocalService;
	@BeanReference(type = UploadPersistence.class)
	protected UploadPersistence uploadPersistence;
	@BeanReference(type = de.uhh.l2g.plugins.service.VideoLocalService.class)
	protected de.uhh.l2g.plugins.service.VideoLocalService videoLocalService;
	@BeanReference(type = VideoPersistence.class)
	protected VideoPersistence videoPersistence;
	@BeanReference(type = VideoFinder.class)
	protected VideoFinder videoFinder;
	@BeanReference(type = de.uhh.l2g.plugins.service.Video_FacilityLocalService.class)
	protected de.uhh.l2g.plugins.service.Video_FacilityLocalService video_FacilityLocalService;
	@BeanReference(type = Video_FacilityPersistence.class)
	protected Video_FacilityPersistence video_FacilityPersistence;
	@BeanReference(type = de.uhh.l2g.plugins.service.Video_LectureseriesLocalService.class)
	protected de.uhh.l2g.plugins.service.Video_LectureseriesLocalService video_LectureseriesLocalService;
	@BeanReference(type = Video_LectureseriesPersistence.class)
	protected Video_LectureseriesPersistence video_LectureseriesPersistence;
	@BeanReference(type = de.uhh.l2g.plugins.service.VideohitlistLocalService.class)
	protected de.uhh.l2g.plugins.service.VideohitlistLocalService videohitlistLocalService;
	@BeanReference(type = VideohitlistPersistence.class)
	protected VideohitlistPersistence videohitlistPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private FacilityLocalServiceClpInvoker _clpInvoker = new FacilityLocalServiceClpInvoker();
}